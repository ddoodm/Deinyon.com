@import './Util.scss';

$NUM-PARTICLES: 255;

@function bubbleSize($seed) {
    @return pow($seed * 1.1, 27);
}

#particles { 
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;

    .particle {
        position: absolute;
        border-radius: 50%;
        background: #FFF;
    }
}

// ==== Particle Animation Keyframes ====
@for $i from 1 through $NUM-PARTICLES {
    $initial-x: random(100) * 1%;
    $initial-y: random(100) * 1%;
    $initial-z: random(100) * 1px + 1px;

    @keyframes particle-animation-#{$i} {
        0% {
            top: $initial-x;
            left: $initial-y;
            transform: translate3d(0, 0, $initial-z);
        }

        25% {
            top: random(100) * 1%;
            left: random(100) * 1%;
            transform: translate3d(0, 0, random(100) * 1px + 1px);
        }

        50% {
            top: random(100) * 1%;
            left: random(100) * 1%;
            transform: translate3d(0, 0, random(100) * 1px + 1px);
        }

        75% {
            top: random(100) * 1%;
            left: random(100) * 1%;
            transform: translate3d(0, 0, random(100) * 1px + 1px);
        }

        100% {
            top: $initial-x;
            left: $initial-y;
            transform: translate3d(0, 0, $initial-z);
        }
    } 

    .particle:nth-child(#{$i}) {
        animation: particle-animation-#{$i} 120s infinite;
        animation-delay: -$i * 5s;

        $ness: bubbleSize($i / $NUM-PARTICLES);
        $fractNess: $ness / bubbleSize(1.0); // Max possible value of ness

        $size: ($ness * 5 + 4) * 1px;
        opacity: (random(100) / 100.0) * 0.2 * (1.0 - $fractNess*0.88) + 0.01;
        width: $size;
        height: $size;
    }
}